<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sc.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.sc.bean.Role">
    <id column="ID" jdbcType="DECIMAL" property="id" />
    <result column="ROLENAME" jdbcType="VARCHAR" property="rolename" />
    <result column="EXPLAIN" jdbcType="VARCHAR" property="explain" />
    <result column="STATUS" jdbcType="CHAR" property="status" />
    <result column="OPERATOR" jdbcType="DECIMAL" property="operator" />
    <result column="CREATETIME" jdbcType="TIMESTAMP" property="createtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, ROLENAME, EXPLAIN, STATUS, OPERATOR, CREATETIME
  </sql>
  <select id="selectByExample" parameterType="com.sc.bean.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ROLE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ROLE
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ROLE
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.sc.bean.RoleExample">
    delete from ROLE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sc.bean.Role">
    insert into ROLE (ID, ROLENAME, EXPLAIN, 
      STATUS, OPERATOR, CREATETIME
      )
    values (ADMIN_SEQ.nextval, #{rolename,jdbcType=VARCHAR}, #{explain,jdbcType=VARCHAR},
      #{status,jdbcType=CHAR}, #{operator,jdbcType=DECIMAL}, #{createtime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sc.bean.Role">
    insert into ROLE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="rolename != null">
        ROLENAME,
      </if>
      <if test="explain != null">
        EXPLAIN,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="operator != null">
        OPERATOR,
      </if>
      <if test="createtime != null">
        CREATETIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="rolename != null">
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="explain != null">
        #{explain,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sc.bean.RoleExample" resultType="java.lang.Long">
    select count(*) from ROLE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ROLE
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.rolename != null">
        ROLENAME = #{record.rolename,jdbcType=VARCHAR},
      </if>
      <if test="record.explain != null">
        EXPLAIN = #{record.explain,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.operator != null">
        OPERATOR = #{record.operator,jdbcType=DECIMAL},
      </if>
      <if test="record.createtime != null">
        CREATETIME = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ROLE
    set ID = #{record.id,jdbcType=DECIMAL},
      ROLENAME = #{record.rolename,jdbcType=VARCHAR},
      EXPLAIN = #{record.explain,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=CHAR},
      OPERATOR = #{record.operator,jdbcType=DECIMAL},
      CREATETIME = #{record.createtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sc.bean.Role">
    update ROLE
    <set>
      <if test="rolename != null">
        ROLENAME = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="explain != null">
        EXPLAIN = #{explain,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=CHAR},
      </if>
      <if test="operator != null">
        OPERATOR = #{operator,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null">
        CREATETIME = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sc.bean.Role">
    update ROLE
    set ROLENAME = #{rolename,jdbcType=VARCHAR},
      EXPLAIN = #{explain,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=CHAR},
      OPERATOR = #{operator,jdbcType=DECIMAL},
      CREATETIME = #{createtime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=DECIMAL}
  </update>

  <delete id="deleteRoleMenu">
    delete  from ROLE_MENU where ROLEID=#{roleid}
  </delete>
  <insert id="insertRoleMenu">
    insert into ROLE_MENU(ROLEID,MENUID)(
    <foreach collection="menuid" item="mid" separator="union">
      select #{roleid},#{mid} from dual
    </foreach>
    )
  </insert>
</mapper>